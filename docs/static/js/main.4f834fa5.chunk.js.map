{"version":3,"sources":["store/TodoListContext.js","store/index.js","components/TodoForm/index.js","components/ListItem/index.js","components/List/index.js","App.js","index.js"],"names":["TodoListContext","React","createContext","StoreProvider","children","store","useLocalStore","todos","localStorage","getItem","JSON","parse","showModal","addTodo","todo","unshift","setItem","stringify","changeStatus","id","map","status","date","Date","getTime","editTodo","data","deleteTodo","filter","Provider","value","TodoForm","isModalShow","onCancel","title","defaultTodo","content","context","useContext","useState","setTodo","onChange","e","target","uuidv4","useEffect","currTodo","find","el","useObserver","visible","onOk","justify","align","gutter","span","placeholder","onPressEnter","style","width","onClick","defaultProps","TextCol","styled","Col","ActionButton","Button","ListItem","toggleModal","marginBottom","justifyContent","alignItems","checked","Text","delete","dayjs","format","display","type","danger","List","key","App","className","margin","size","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f834fa5.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoListContext = React.createContext();\n\nexport default TodoListContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useLocalStore } from 'mobx-react';\nimport TodoListContext from './TodoListContext';\n\nconst StoreProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [],\n    showModal: false,\n    addTodo: (todo) => {\n      store.todos.unshift(todo);\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    changeStatus: (id) => {\n      store.todos = store.todos.map((todo) => {\n        if (todo.id === id) {\n          const status = todo.status === 'undone' ? 'done' : 'undone';\n          const date = new Date().getTime();\n          return { ...todo, status, date };\n        }\n        return todo;\n      });\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    editTodo: (id, data) => {\n      store.todos = store.todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, ...data };\n        }\n        return todo;\n      });\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    deleteTodo: (id) => {\n      store.todos = store.todos.filter((todo) => todo.id !== id);\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n  }));\n\n  return (\n    <TodoListContext.Provider value={store}>{children}</TodoListContext.Provider>\n  );\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useObserver } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nimport { Input, Button, Col, Row, Modal } from 'antd';\nimport TodoListContext from '../../store/TodoListContext';\n\nconst TodoForm = ({ isModalShow, onCancel, title, id }) => {\n  const defaultTodo = { content: '', date: new Date(), status: 'undone', id: null };\n  const context = useContext(TodoListContext);\n  const [todo, setTodo] = useState(defaultTodo);\n\n  const onChange = (e) => {\n    const data = {\n      content: e.target.value,\n      date: new Date().getTime(),\n      status: todo.status || 'undone',\n      id: todo.id || uuidv4(),\n    };\n    setTodo(data);\n  };\n\n  const addTodo = () => {\n    if (id) {\n      context.editTodo(id, todo);\n    } else {\n      context.addTodo(todo);\n      setTodo(defaultTodo);\n    }\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (id) {\n      const currTodo = context.todos.find((el) => el.id === id);\n      setTodo({\n        ...currTodo,\n      });\n    }\n  }, [context.todos, id]);\n\n  return useObserver(() => (\n    <Modal visible={isModalShow} onCancel={onCancel} onOk={addTodo} title={title}>\n      {/* change into form */}\n      <Row justify=\"between\" align=\"center\" gutter=\"16\">\n        <Col span={12}>\n          <Input placeholder=\"todos...\" value={todo.content} onChange={onChange} onPressEnter={() => addTodo()} />\n        </Col>\n        <Col span={4}>\n          <Button style={{ width: '100%' }} onClick={addTodo}>Add</Button>\n        </Col>\n      </Row>\n    </Modal>\n  ));\n};\n\nTodoForm.propTypes = {\n  isModalShow: PropTypes.bool,\n  onCancel: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string,\n};\n\nTodoForm.defaultProps = {\n  isModalShow: false,\n  title: 'Add Todo',\n};\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { Row, Col, Checkbox, Button, Typography } from 'antd';\nimport TodoForm from '../TodoForm';\n\nconst TextCol = styled(Col)`{\n  display: flex;\n  align-items: center;\n}`;\n\nconst ActionButton = styled(Button)`{\n  width: 48%;\n}`;\n\nconst ListItem = ({ todo: { content, date, status, id }, onChange, deleteTodo, editTodo }) => {\n  const [isModalShow, toggleModal] = useState(false);\n  return (\n    <>\n      <Row gutter=\"24\" align=\"center\" style={{ marginBottom: '10px' }}>\n        <TextCol span={2} style={{ justifyContent: 'center', alignItems: 'center' }}>\n          <Checkbox checked={status === 'done'} onChange={() => onChange(id)} />\n        </TextCol>\n        <TextCol\n          align=\"center\"\n          span={10}\n          style={{ justifyContent: 'center' }}\n        >\n          <Typography.Text delete={status === 'done'}>{content}</Typography.Text>\n        </TextCol>\n        <TextCol span={6} style={{ justifyContent: 'center' }}>\n          <Typography.Text>{dayjs(date).format('YYYY-MM-DD HH:mm')}</Typography.Text>\n        </TextCol>\n        <TextCol span={6} style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <ActionButton type=\"primary\" onClick={() => toggleModal(true)}>Edit</ActionButton>\n          <ActionButton danger onClick={() => deleteTodo(id)}>Delete</ActionButton>\n        </TextCol>\n      </Row>\n      <TodoForm\n        isModalShow={isModalShow}\n        onCancel={() => toggleModal(false)}\n        id={id}\n        title=\"Edit Todo\"\n      />\n    </>\n  );\n};\n\nListItem.propTypes = {\n  todo: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n  }),\n  onChange: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n};\n\nListItem.defaultProps = {\n  todo: {},\n};\n\nexport default ListItem;\n","import React, { useContext } from 'react';\nimport { useObserver } from 'mobx-react';\nimport { Row, Col, Typography } from 'antd';\nimport TodoListContext from '../../store/TodoListContext';\nimport ListItem from '../ListItem';\n\nconst List = () => {\n  const context = useContext(TodoListContext);\n\n  return useObserver(() => (\n    <>\n      <Row gutter=\"24\" align=\"center\" style={{ marginBottom: '16px' }}>\n        <Col span={2} align=\"center\">\n          <Typography.Text>Status</Typography.Text>\n        </Col>\n        <Col align=\"center\" span={10}>\n          <Typography.Text>Content</Typography.Text>\n        </Col>\n        <Col span={6}>\n          <Typography.Text>Last Modified</Typography.Text>\n        </Col>\n        <Col span={6}>\n          <Typography.Text>Action</Typography.Text>\n        </Col>\n      </Row>\n      {context.todos.map((todo) => (\n        <ListItem\n          todo={todo}\n          key={todo.id}\n          onChange={context.changeStatus}\n          deleteTodo={context.deleteTodo}\n          editTodo={context.editTodo}\n        />\n      ))}\n    </>\n  ));\n};\n\nList.propTypes = {};\n\nexport default List;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Button } from 'antd';\n\nimport StoreProvider from './store';\nimport TodoForm from './components/TodoForm';\nimport List from './components/List';\n\nfunction App() {\n  const [isModalShow, toggleModal] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <StoreProvider>\n        <main style={{ width: '60%', margin: '0 auto' }}>\n          <h1>TODO LIST</h1>\n          <Button\n            onClick={() => toggleModal(true)}\n            size=\"large\"\n            style={{ marginBottom: '16px' }}\n          >\n            ADD TODO\n          </Button>\n          <List />\n          <TodoForm isModalShow={isModalShow} onCancel={() => toggleModal(false)} />\n        </main>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}