{"version":3,"sources":["store/TodoListContext.js","store/index.js","hooks/useModal.js","hooks/useStore.js","components/TodoForm/index.js","components/ListItem/index.js","components/List/index.js","modules/Todo.js","modules/Done.js","routes/index.js","components/Sidebar/index.js","modules/App.js","index.js"],"names":["TodoListContext","React","createContext","StoreProvider","children","store","useLocalStore","todos","localStorage","getItem","JSON","parse","addTodo","todo","unshift","setItem","stringify","changeStatus","id","map","status","date","Date","getTime","editTodo","data","deleteTodo","filter","Provider","value","useModal","initData","useState","visible","setVisible","openModal","closeModal","useStore","module","context","useContext","TodoForm","isModalShow","onCancel","title","defaultTodo","content","setTodo","onChange","e","target","uuidv4","useEffect","currTodo","find","el","useObserver","onOk","justify","align","gutter","span","placeholder","onPressEnter","stopPropagation","defaultProps","TextCol","styled","Col","ActionButton","Button","ListItem","Modal","style","marginBottom","justifyContent","alignItems","checked","Text","delete","dayjs","format","display","type","onClick","danger","key","Math","random","List","ManageTodo","className","margin","length","size","marginTop","ItemWrapper","div","DondeTodo","router","name","component","Todo","Title","todosDone","col","level","Routes","r","path","exact","to","Sidebar","selectedMenu","setSelectedMenu","location","useLocation","matchRoute","route","pathname","Sider","width","theme","selectedKeys","undefined","Item","Header","Layout","Content","AppContainer","minHeight","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.637f7194.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoListContext = React.createContext();\n\nexport default TodoListContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useLocalStore } from 'mobx-react';\nimport TodoListContext from './TodoListContext';\n\nconst StoreProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [],\n    addTodo: (todo) => {\n      store.todos.unshift(todo);\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    changeStatus: (id) => {\n      store.todos = store.todos.map((todo) => {\n        if (todo.id === id) {\n          const status = todo.status === 'undone' ? 'done' : 'undone';\n          const date = new Date().getTime();\n          return { ...todo, status, date };\n        }\n        return todo;\n      });\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    editTodo: (id, data) => {\n      store.todos = store.todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, ...data };\n        }\n        return todo;\n      });\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    deleteTodo: (id) => {\n      store.todos = store.todos.filter((todo) => todo.id !== id);\n      localStorage.setItem('todos', JSON.stringify(store.todos));\n    },\n    get todosDone() {\n      return store.todos.filter((todo) => todo.status === 'done');\n    },\n  }));\n\n  return (\n    <TodoListContext.Provider value={store}>{children}</TodoListContext.Provider>\n  );\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import { useState } from 'react';\n\nconst useModal = (initData) => {\n  const [visible, setVisible] = useState(false);\n  // const [modalData, setModalData] = useState(initData);\n\n  const openModal = (data) => {\n    setVisible(true);\n    // setModalData(data);\n  };\n\n  const closeModal = () => {\n    setVisible(false);\n    // setModalData(initData);\n  };\n\n  return {\n    visible,\n    // modalData,\n    openModal,\n    closeModal,\n  };\n};\n\nexport default useModal;\n","import React from 'react';\nimport TodoListContext from '../store/TodoListContext';\n\nconst useStore = (module) => {\n  const context = React.useContext(TodoListContext);\n  return module ? context[module] : context;\n};\n\nexport default useStore;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useObserver } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nimport { Input, Col, Row, Modal } from 'antd';\nimport { useStore } from '../../hooks';\n\nconst TodoForm = ({ isModalShow, onCancel, title, id }) => {\n  const defaultTodo = { content: '', date: new Date(), status: 'undone', id: null };\n  const store = useStore();\n  const [todo, setTodo] = useState(defaultTodo);\n\n  const onChange = (e) => {\n    const data = {\n      content: e.target.value,\n      date: new Date().getTime(),\n      status: todo.status || 'undone',\n      id: todo.id || uuidv4(),\n    };\n    setTodo(data);\n  };\n\n  const addTodo = () => {\n    if (id) {\n      store.editTodo(id, todo);\n    } else {\n      store.addTodo(todo);\n      setTodo(defaultTodo);\n    }\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (id) {\n      const currTodo = store.todos.find((el) => el.id === id);\n      setTodo({\n        ...currTodo,\n      });\n    }\n  }, [store.todos, id]);\n\n  return useObserver(() => (\n    <Modal visible={isModalShow} onCancel={onCancel} onOk={addTodo} title={title}>\n      {/* change into form */}\n      <Row justify=\"between\" align=\"center\" gutter=\"16\">\n        <Col span={12}>\n          <Input placeholder=\"todos...\" value={todo.content} onChange={onChange} onPressEnter={(e) => { e.stopPropagation(); addTodo(); }} />\n        </Col>\n      </Row>\n    </Modal>\n  ));\n};\n\nTodoForm.propTypes = {\n  isModalShow: PropTypes.bool,\n  onCancel: PropTypes.func,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string,\n};\n\nTodoForm.defaultProps = {\n  isModalShow: false,\n  title: 'Add Todo',\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { Row, Col, Checkbox, Button, Typography } from 'antd';\nimport { useModal, useStore } from '../../hooks';\nimport TodoForm from '../TodoForm';\n\nconst TextCol = styled(Col)`{\n  display: flex;\n  align-items: center;\n}`;\n\nconst ActionButton = styled(Button)`{\n  width: 48%;\n}`;\n\nconst ListItem = ({ todo: { content, date, status, id }, onChange }) => {\n  const store = useStore();\n  const Modal = useModal();\n  // const [isModalShow, setIsModalShow] = useState(false);\n  return (\n    <>\n      <Row gutter=\"24\" align=\"center\" style={{ marginBottom: '10px' }}>\n        <TextCol span={2} style={{ justifyContent: 'center', alignItems: 'center' }}>\n          <Checkbox checked={status === 'done'} onChange={() => onChange(id)} />\n        </TextCol>\n        <TextCol\n          align=\"center\"\n          span={10}\n          style={{ justifyContent: 'center' }}\n        >\n          <Typography.Text delete={status === 'done'}>{content}</Typography.Text>\n        </TextCol>\n        <TextCol span={6} style={{ justifyContent: 'center' }}>\n          <Typography.Text>{dayjs(date).format('YYYY-MM-DD HH:mm')}</Typography.Text>\n        </TextCol>\n        <TextCol span={6} style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <ActionButton type=\"primary\" onClick={Modal.openModal}>Edit</ActionButton>\n          <ActionButton danger onClick={() => store.deleteTodo(id)}>Delete</ActionButton>\n        </TextCol>\n      </Row>\n      <TodoForm\n        key={Math.random()}\n        isModalShow={Modal.visible}\n        onCancel={Modal.closeModal}\n        id={id}\n        title=\"Edit Todo\"\n      />\n    </>\n  );\n};\n\nListItem.propTypes = {\n  todo: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n  }),\n  onChange: PropTypes.func.isRequired,\n  // deleteTodo: PropTypes.func.isRequired,\n};\n\nListItem.defaultProps = {\n  todo: {},\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { useObserver } from 'mobx-react';\nimport { Row, Col, Typography } from 'antd';\nimport { useStore } from '../../hooks';\nimport ListItem from '../ListItem';\n\nconst List = () => {\n  const store = useStore();\n\n  return useObserver(() => (\n    <>\n      <Row gutter=\"24\" align=\"center\" style={{ marginBottom: '16px' }}>\n        <Col span={2} align=\"center\">\n          <Typography.Text>Status</Typography.Text>\n        </Col>\n        <Col align=\"center\" span={10}>\n          <Typography.Text>Content</Typography.Text>\n        </Col>\n        <Col span={6}>\n          <Typography.Text>Last Modified</Typography.Text>\n        </Col>\n        <Col span={6}>\n          <Typography.Text>Action</Typography.Text>\n        </Col>\n      </Row>\n      {store.todos.map((todo) => (\n        <ListItem\n          todo={todo}\n          key={todo.id}\n          onChange={store.changeStatus}\n          deleteTodo={store.deleteTodo}\n        />\n      ))}\n    </>\n  ));\n};\n\nList.propTypes = {};\n\nexport default List;\n","import React from 'react';\nimport { useObserver } from 'mobx-react';\n\nimport { Button } from 'antd';\nimport { useModal, useStore } from '../hooks';\nimport TodoForm from '../components/TodoForm';\nimport List from '../components/List';\n\nfunction ManageTodo() {\n  const store = useStore();\n  const Modal = useModal();\n\n  return useObserver(() => (\n    <main className=\"App\" style={{ margin: '0 auto' }}>\n      { store.todos.length > 0 ? <List /> : <h1>Do not have any todo yet...</h1> }\n      <Button\n        onClick={Modal.openModal}\n        size=\"large\"\n        style={{ marginTop: '16px' }}\n      >\n        ADD TODO\n      </Button>\n      <TodoForm key={Math.random()} isModalShow={Modal.visible} onCancel={Modal.closeModal} />\n    </main>\n  ));\n}\n\nexport default ManageTodo;\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport styled from 'styled-components';\nimport { useObserver } from 'mobx-react';\nimport { Row, Col, Typography } from 'antd';\n\nimport { useStore } from '../hooks';\n\nconst ItemWrapper = styled.div`{\n  text-align: center;\n  margin-top: 20px;\n}`;\n\nfunction DondeTodo() {\n  const store = useStore();\n\n  // useEffect(() => {\n  //   const doneTodos = store.todos.filter((todo) => todo.status === 'done');\n  //   setTodosDone(doneTodos);\n  // }, [store.todos]);\n\n  return useObserver(() => (\n    <ItemWrapper className=\"App\" style={{ margin: '0 auto' }}>\n      <Typography.Title>Done</Typography.Title>\n      {store.todosDone.length ? (\n        store.todosDone.map((todo) => {\n          return (\n            <Row key={todo.id} justify=\"center\" gutter={16}>\n              <Col col={6}>\n                <Typography.Text>{dayjs(todo.date).format('YYYY-MM-DD HH:mm')}</Typography.Text>\n              </Col>\n              <Col col={10}>\n                <Typography.Text>{todo.content}</Typography.Text>\n              </Col>\n            </Row>\n          );\n        })\n      ) : <Typography.Title level={4}>Nothing is done...</Typography.Title>}\n    </ItemWrapper>\n  ));\n}\n\nexport default DondeTodo;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Todo from '../modules/Todo';\nimport Done from '../modules/Done';\n\nexport const router = [\n  { name: 'Todo', router: '/', component: Todo },\n  { name: 'Done', router: '/done', component: Done },\n];\n\nconst Routes = () => (\n  <Switch>\n    {router.map((r) => (\n      <Route path={r.router} key={r.name} component={r.component} exact />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport { router } from '../../routes';\n\nconst Sidebar = () => {\n  const [selectedMenu, setSelectedMenu] = useState('Todo');\n  const location = useLocation();\n\n  useEffect(() => {\n    const matchRoute = router.find((route) => route.router === location.pathname);\n    if (matchRoute) setSelectedMenu(matchRoute.name);\n  }, [location]);\n\n  const handleClick = (e) => {\n    if (e.key !== undefined) {\n      setSelectedMenu(e.key);\n    }\n  };\n\n  return (\n    <Layout.Sider width={200}>\n      <Menu theme=\"dark\" selectedKeys={[selectedMenu]} onClick={handleClick}>\n        {router.map((route) => (\n          <Menu.Item key={route.name}>\n            <Link to={route.router}>{route.name}</Link>\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Layout.Sider>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from '../routes';\nimport Sidebar from '../components/Sidebar';\n\nconst { Header, Content } = Layout;\n\nfunction AppContainer() {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header>\n        <h1>TODO</h1>\n      </Header>\n      <Layout>\n        <BrowserRouter>\n          <Sidebar />\n          <Content>\n            <Routes style={{ height: '100vh' }} />\n          </Content>\n        </BrowserRouter>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport StoreProvider from './store';\nimport App from './modules/App';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}